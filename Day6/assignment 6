//leetcode 1
public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Dictionary<int, int> dic = new Dictionary<int, int>();
        for(int i = 0; i < nums.Length; i++) {
            if(dic.ContainsKey(nums[i])) {
                return new int[] {dic[nums[i]], i};
            }
            if (!dic.ContainsKey(target - nums[i]))
                dic.Add(target - nums[i], i);
        }
        return  new int[] {-1, -1};
    }
}


//9. Palindrome Number
public class Solution {
    public bool IsPalindrome(int x) {
        string s = x.ToString();
        int l = 0, r = s.Length-1;
        while(l < r) {
            if(s[l++] != s[r--]) return false;
        }
        return true;
    }
}

